library(quantmod)
library(rugarch)
library(ggpubr)
ar = 5
ma = 2
m1 = arima(log_rt, c(ar,0,ma))
library(quantmod)
library(rugarch)
library(ggpubr)
#getSymbols("AAPL",from="2010-07-31",to="2020-07-31") # this won't work for me, so I am just going to download the csv from yahoo for the correct date range
AAPL = read.table("AAPL.csv", sep=",", header=TRUE)
adj_price = AAPL$Adj.Close
log_rt = diff(log(adj_price))
mean(log_rt)
t.test(log_rt, mu=0, alternative="two.sided")
acf(log_rt)
pacf(log_rt)
## This section takes a long time to run, so I have commented it out and written the important results down
#lags = 10
#aic_m = matrix(0, nrow=lags, ncol=lags)
#bic_m = matrix(0, nrow=lags, ncol=lags)
#for (i in 1:lags) {
#  for (j in 1:lags) {
#    aic_m[i,j] = AIC(arima(log_rt, order=c((i-1),0,(j-1))))
#    bic_m[i,j] = BIC(arima(log_rt, order=c((i-1),0,(j-1))))
#  }
#}
#which(aic_m==min(aic_m), arr.ind=TRUE) # [10, 7]
#which(bic_m==min(bic_m), arr.ind=TRUE) # [6, 3]
ar = 5
ma = 2
m1 = arima(log_rt, c(ar,0,ma))
m1
Box.test(m1$residuals^2, lag=8, type="Ljung-Box")
ar = 5
ma = 2
m1 = arima(log_rt, c(ar,0,ma))
m1
Box.test(m1$residuals^2, lag=8, type="Ljung-Box")
ar = 5
ma = 2
m1 = arima(log_rt, c(ar,0,ma))
m1
Box.test(m1$residuals^2, lag=8, fitdf=7, type="Ljung-Box")
